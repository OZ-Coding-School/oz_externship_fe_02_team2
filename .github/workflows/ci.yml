name: CI

on:
  pull_request:
    branches: ['main', 'dev']
    types: [opened, synchronize, reopened]
  push:
    branches: ['main', 'dev']

# 같은 브랜치에서 이전 실행을 취소(시간 절약)
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test:
    runs-on: ubuntu-latest
    # Node 20(LTS)와 22(현재 로컬) 둘 다 검증
    strategy:
      fail-fast: false
      matrix:
        node-version: [20, 22]

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      # Vite용 환경변수 주입: 레포 Secrets에 저장된 값을 .env.ci로 생성
      # - name: Create .env.ci
      #   if: ${{ secrets.VITE_API_BASE_URL != '' }}
      #   run: |
      #     echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env.ci

      # - name: Install deps
      #   run: npm ci

      # - name: Lint
      #   run: npm run lint

      # - name: Type Check
      #   run: npm run typecheck

      # 추후 테스트 추가 시! 없다면 이 단계 삭제
      # - name: Unit Test
      #   run: npm test

      # - name: Build
      #   env:
      #     NODE_ENV: production
      #   run: npm run build

      # 아티팩트 업로드 — 실패해도 디버깅에 도움
      - name: Upload build artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: dist-node${{ matrix.node-version }}
          path: dist
          if-no-files-found: warn
